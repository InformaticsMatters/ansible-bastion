---

# Configure a bastion node.

# There's some SSH instability connecting to servers.
# We assume fact gathering has been disabled for this role
# so here we wait for a connection and then invoke gather facts (setup)
# ourselves.

- name: Wait for connection
  wait_for_connection:
    timeout: 120

- name: Gather facts
  setup:

- name: Defeat remote_tmp warning
  file:
    path: /root/.ansible/tmp
    state: directory
    owner: root
    group: root

- name: Install yum utils
  package:
    name:
    - yum-utils
    - "@Development tools"

- name: Install key packages
  yum:
    name:
    - git
    - https://centos7.iuscommunity.org/ius-release.rpm
    update_cache: yes

- name: Install Python3
  yum:
    name:
    - python36
    update_cache: yes

- name: Extract user's HOME
  getent:
    database: passwd
    key: "{{ os_username }}"
    split: ":"

- name: Set user's HOME fact
  set_fact:
    remote_home: "{{ getent_passwd[os_username][4] }}"

- name: Create Python 3 virtual environment directory
  file:
    path: "{{ remote_home }}/environments"
    state: directory
    owner: "{{ os_username }}"

- name: Check Python 3 virtual environment directory
  stat:
    path: "{{ remote_home }}/environments/{{ remote_venv_name }}"
  register: venv_dir

- name: Create Python 3 virtual environment
  command: python3.6 -m venv {{ remote_venv_name }}
  args:
    chdir: "{{ remote_home }}/environments"
  when: not venv_dir.stat.exists
  become: yes
  become_user: "{{ os_username }}"

- name: Add environment to bashrc
  lineinfile:
    path: "{{ remote_home }}/.bashrc"
    regex: source ~/environments/{{ remote_venv_name }}/bin/activate
    line: source ~/environments/{{ remote_venv_name }}/bin/activate
    owner: "{{ os_username }}"

- name: Create git checkout directory
  file:
    path: "{{ remote_home }}/git"
    state: directory
    owner: "{{ os_username }}"

- name: Clone ansible-galaxy-cloud (into ~/.git)
  git:
    repo: https://github.com/InformaticsMatters/ansible-galaxy-cloud.git
    dest: "{{ remote_home }}/git/ansible-galaxy-cloud"
    version: master
  become: yes
  become_user: "{{ os_username }}"

# Here we install a parameters template n the bastion.
# This is useful when running other playbooks from there
# that need to interact with the cloud provider.

- name: Write initial parameters
  template:
    src: authentication-{{ provider }}.j2
    dest: "{{ remote_home }}/git/ansible-galaxy-cloud/parameters"
    owner: "{{ os_username }}"

# Finish by copying the SSH private key we generated to the bastion
# and then display the command required to connect...

- name: Create bastion SSH directory
  file:
    path: "{{ remote_home }}/.ssh"
    mode: 0700
    owner: "{{ os_username }}"

- name: Copy SSH private key to bastion
  copy:
    src: "{{ lookup('env', 'HOME') }}/.ssh/{{ hostvars.localhost.private_key_filename }}"
    dest: "{{ remote_home }}/.ssh/id_rsa"
    mode: 0600
    owner: "{{ os_username }}"

- name: Copy SSH public key to bastion
  copy:
    src: "{{ lookup('env', 'HOME') }}/.ssh/{{ hostvars.localhost.private_key_filename }}.pub"
    dest: "{{ remote_home }}/.ssh/id_rsa.pub"
    mode: 0600
    owner: "{{ os_username }}"

- name: Create local connection command (./connect-{{ instance_base_name }}-{{ provider }}.sh)
  copy:
    content: ssh -i {{ key_path }} {{ target }}
    dest: connect-{{ instance_base_name }}-{{ provider }}.sh
    mode: 0700
  vars:
    key_path: ~/.ssh/{{ hostvars.localhost.private_key_filename }}
    target: "{{ os_username }}@{{ inventory_hostname }}"
  become: yes
  become_user: "{{ lookup('env', 'USER') }}"
  delegate_to: localhost

# Now permit ssh access to the bastion by adding
# any public keys (.pub files) found in the project root.
# The keys are added to the node's 'centos' account.

- name: Create authorised users from public keys (centos)
  authorized_key:
    user: centos
    key: "{{ lookup('file', item) }}"
  with_fileglob:
  - "{{ role_path }}/../../*.pub"

# We also copy these keys to the bastion for use
# when the cluster's instantiated.

- name: Copy public keys (to ~/git/ansible-galaxy-cloud)
  copy:
    src: "{{ item }}"
    dest: "{{ remote_home }}/git/ansible-galaxy-cloud/{{ item|basename }}"
    owner: "{{ os_username }}"
    mode: 0644
  with_fileglob:
  - "{{ role_path }}/../../*.pub"
