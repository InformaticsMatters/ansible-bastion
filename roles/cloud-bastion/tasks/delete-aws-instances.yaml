---

- name: Assert key variables
  assert:
    that:
      - aws_access_key_id is defined
      - aws_access_key_id|length > 0

- name: Display dangerous variables
  debug:
    msg: >-
      instance_base_name={{ instance_base_name }}

# Deletes our bastion.

- name: Delete Bastion?
  pause:
    prompt: |-
      Are you sure you want to delete the '{{ instance_base_name }}' bastion?
      Hit return to delete.
      Hit Ctrl+c and then "a" if you've changed your mind

# No need to detach the volume
# (we see errors if it's not there anyway)
# so just delete the server...

#- name: Delete bastion node
#  ec2:
#    state: absent

- name: Delete bastion security group
  ec2_group:
    region: "{{ aws_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    name: "{{ instance_base_name }}-sg"
    state: absent
  when: bastion_facts.instances|length == 0

- name: Delete cloud public key ({{ instance_base_name }}-key }})
  ec2_key:
    region: "{{ aws_region }}"
    state: absent
    instance_tags:
      name: "{{ instance_base_name }}-bastion"
      graph: "{{ instance_base_name }}"

- name: Delete connection command
  file:
    path: connect-{{ instance_base_name }}.sh
    state: absent

- name: Delete local ssh key-pair
  openssh_keypair:
    path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa_{{ instance_base_name }}"
    state: absent
